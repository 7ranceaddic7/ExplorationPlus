CONTRACT_TYPE
{
    name = ExplorationPlus-FlyBy
    title = Start exploring @/targetBody1
	genericTitle = Start exploring a Celestial Body
    group = ExplorationPlus
	description = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to head out to @/targetBody1 and see what we can see.
    genericDescription = Head to a new celestial body, to see what we can see.
    synopsis = Begin exploring @/targetBody1
    completedMessage = Huzzah! There is no such thing as the final frontier.
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/targetBody1
    maxSimultaneous = 1
    rewardScience = 4
    rewardReputation = 6.7
    rewardFunds = 64000.0
    failureReputation = 0.0
    failureFunds = 0 
    advanceFunds = 0
    DATA
    {
        type = CelestialBody
        targetBody1 = NextUnreachedBody()
		title = Must have not reached all bodies.
    }

	PARAMETER
	{
		name = FlybyDefine
		type = VesselParameterGroup
		define = Flyby
		hideVesselName = true
	    dissassociateVesselsOnContractCompletion = true
	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ESCAPING
			title = Fly by @/targetBody1
			disableOnStateChange = false

            REQUIREMENT
            {
                name = NotSun
                type = Expression
                expression = !@/targetBody1.IsSun()
            }
		}

        PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			title = Orbit @/targetBody1
			disableOnStateChange = false

            REQUIREMENT
            {
                name = IsSun
                type = Expression
                expression = @/targetBody1.IsSun()
            }
		}
        

        PARAMETER
	}
	PARAMETER
	{
		name = FlybyCatch
		type = VesselParameterGroup
		vessel = Flyby
		
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
		}
		
		REQUIREMENT
		{
			name = Expression
			type = Expression
			expression = (@ExplorationPlus:returnHome == 2)
		}
	}
	PARAMETER
	{
    name = CollectScience
    type = CollectScience
	recoveryMethod = RecoverOrTransmit
	title = Return the first science from @/targetBody1
	}
	
    REQUIREMENT
    {
        name = ReachOrbit
        type = Orbit
		targetBody = HomeWorld()
		title = Must have reached orbit for the first time.
    }
}