CONTRACT_TYPE
{
    name = ExplorationPlus-Orbit
    title = Orbit @/targetBody1
	genericTitle = Orbit a Celestial Body
    group = ExplorationPlus
	description = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to head out to @/targetBody1 and see what we can see.
    genericDescription = Orbit a celestial body, to see what we can see.
    synopsis = Reach orbit of @/targetBody1
    completedMessage = Huzzah! There is no such thing as the final frontier.
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/targetBody1
	//these are way out of sync, but can use them for examples for now.
    rewardScience = 100.0
    rewardReputation = 20.0
    rewardFunds = 100000.0
    failureReputation = 10.0
    failureFunds = 10000.0
    advanceFunds = 10000.0

    DATA
    {
        type = List<CelestialBody>
		requiredValue = false
		hidden = true
    }
	DATA
	{
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		targetBody1 =  HomeWorld().HaveOrbited() ? ReachedBodies().Where(r => !r.HaveOrbited()).SelectUnique() : HomeWorld()
		title = Must have reached a body but not orbited it.
	}

    PARAMETER
    {
        name = ReachState
        type = ReachState
		situation = ORBITING
		title = Orbit @/targetBody1
    }
	
    REQUIREMENT
    {
        name = ReachOrbit
        type = Orbit
		targetBody = @/targetBody1
		invertRequirement = true
		title = Must not have orbited the target body.
    }